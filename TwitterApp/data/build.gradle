buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'
//apply plugin: 'java'
//apply plugin: 'android-apt'

android {

    defaultPublishConfig "debug"
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'    // Due to Robolectric that modifies the manifest when running tests
    }
}

dependencies {

    def dataDependencies = rootProject.ext.dataDependencies

    compile project(':domain')

    provided dataDependencies.javaxAnnotation

    // RX Android
    compile dataDependencies.rxAndroid
    compile dataDependencies.rxJava

    // Retrofit 2 Type-safe HTTP client for Android and Java
    compile dataDependencies.retrofit
    compile dataDependencies.converterGson
    compile dataDependencies.adapterRxjava

    compile dataDependencies.javaxInject
    compile dataDependencies.androidAnnotations

}
